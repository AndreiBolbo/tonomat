        -:    0:Source:C:/Users/MSI/CLionProjects/untitled7/Produs.cpp
        -:    0:Graph:C:\Users\MSI\CLionProjects\untitled7\cmake-build-debug-coverage\CMakeFiles\untitled7.dir\Produs.cpp.gcno
        -:    0:Data:C:\Users\MSI\CLionProjects\untitled7\cmake-build-debug-coverage\CMakeFiles\untitled7.dir\Produs.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by MSI on 20/04/2022.
        -:    3://
        -:    4:
        -:    5:#include "Produs.h"
        -:    6:#include "cstring";
function _ZN6ProdusC2Ev called 0 returned 0% blocks executed 0%
    #####:    7:Produs::Produs() {
    $$$$$:    7-block  0
    #####:    8:    cod = 0;
    #####:    9:    nume = nullptr;
    #####:   10:    pret = 0;
        -:   11:
        -:   12:
    #####:   13:}
function _ZN6ProdusC2EiPcf6PrType called 4 returned 100% blocks executed 100%
        4:   14:Produs::Produs(int cod, char *nume, float pret, PrType tip) {
        4:   14-block  0
        4:   15:    this->cod = cod;
        4:   16:    this->nume = new char[strlen(nume)+1];
        4:   16-block  0
call    0 returned 4
        4:   17:    strcpy(this->nume,nume);
        4:   18:    this->pret = pret;
        4:   19:    this->tip = tip;
        4:   20:}
function _ZN6ProdusC2ERKS_ called 5 returned 100% blocks executed 100%
        5:   21:Produs::Produs(const Produs &p) {
        5:   21-block  0
        5:   22:    this->cod = p.cod;
        5:   23:    nume = new char [strlen(p.nume)+1];
        5:   23-block  0
call    0 returned 5
        5:   24:    strcpy(nume,p.nume);
        5:   25:    pret = p.pret;
        5:   26:    tip = p.tip;
        5:   27:}
        -:   28:
function _ZN6ProdusaSERKS_ called 0 returned 0% blocks executed 0%
    #####:   29:Produs &Produs::operator=(const Produs &p) {
    $$$$$:   29-block  0
    #####:   30:    if(this != &p)
    $$$$$:   30-block  0
branch  0 never executed
branch  1 never executed
        -:   31:    {
    #####:   32:        this->cod = p.cod;
    #####:   33:        nume = new char [strlen(p.nume)+1];
    $$$$$:   33-block  0
call    0 never executed
    #####:   34:        strcpy(nume,p.nume);
    #####:   35:        pret = p.pret;
    #####:   36:        tip = p.tip;
    #####:   37:        return *this;
        -:   38:    }
        -:   39:
    #####:   40:}
    $$$$$:   40-block  0
        -:   41:
function _ZNK6Produs6getCodEv called 1 returned 100% blocks executed 100%
        1:   42:int Produs::getCod() const {
        1:   42-block  0
        1:   43:    return cod;
        1:   43-block  0
        -:   44:
        -:   45:}
function _ZNK6Produs7getPretEv called 4 returned 100% blocks executed 100%
        4:   46:int Produs::getPret() const {
        4:   46-block  0
        4:   47:    return pret;
        4:   47-block  0
        -:   48:}
        -:   49:
function _ZNK6Produs7getnumeEv called 3 returned 100% blocks executed 100%
        3:   50:char *Produs::getnume() const {
        3:   50-block  0
        3:   51:    return nume;
        3:   51-block  0
        -:   52:}
        -:   53:
function _ZN6Produs9get_prdctEv called 1 returned 100% blocks executed 100%
        1:   54:PrType Produs::get_prdct() {
        1:   54-block  0
        1:   55:    return tip;
        1:   55-block  0
        -:   56:}
        -:   57:
function _ZN6Produs6setCodEi called 0 returned 0% blocks executed 0%
    #####:   58:void Produs::setCod(int cod) {
    $$$$$:   58-block  0
    #####:   59:    this->cod  = cod;
    #####:   60:}
function _ZN6ProdusD2Ev called 9 returned 100% blocks executed 100%
        9:   61:Produs::~Produs() {
        9:   61-block  0
        9:   62:    delete []nume;
        9:   62-block  0
branch  0 taken 9 (fallthrough)
branch  1 taken 0
        9:   62-block  1
call    2 returned 9
        9:   63:    nume = nullptr;
        9:   64:}
function _ZN6Produs7setNumeEPc called 0 returned 0% blocks executed 0%
    #####:   65:void Produs::setNume(char *nume) {
    $$$$$:   65-block  0
    #####:   66:    this->nume = new char [strlen(nume)+1];
    $$$$$:   66-block  0
call    0 never executed
    #####:   67:    strcpy(this->nume,nume);
    #####:   68:}
        -:   69:
function _ZN6Produs7setPretEf called 1 returned 100% blocks executed 100%
        1:   70:void Produs::setPret(float pret) {
        1:   70-block  0
        1:   71:    this->pret = pret;
        1:   72:}
function _ZN6ProduseqERKS_ called 0 returned 0% blocks executed 0%
    #####:   73:bool Produs::operator==(const Produs &p){
    $$$$$:   73-block  0
    #####:   74:    return(cod==p.cod && pret ==p.pret && strcmp(nume,p.nume)==0 && tip ==p.tip);
    $$$$$:   74-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   74-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:   74-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:   74-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:   74-block  4
    $$$$$:   74-block  5
    $$$$$:   74-block  6
        -:   75:}
function _ZlsRSoR6Produs called 0 returned 0% blocks executed 0%
    #####:   76:ostream& operator<<(ostream &os, Produs &t){
    $$$$$:   76-block  0
    #####:   77:    os <<"categoria:"<<t.tip<<" nume:"<<t.nume<<" cod:"<<t.cod<<"pret:"<<t.pret;
    $$$$$:   77-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
    #####:   78:    return os;
function _GLOBAL__sub_I__ZN6ProdusC2Ev called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        4:   79:}
        1:   79-block  0
        1:   79-block  1
call    0 returned 1
        1:   79-block  2
        1:   79-block  3
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   79-block  4
branch  3 taken 1 (fallthrough)
branch  4 taken 0
